server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # These are commented out until we have run the certbot for the first time. Otherwise it will
    # fail with a Nginx config error.
    # ssl_certificate /etc/letsencrypt/live/vortechmusic.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/vortechmusic.com/privkey.pem;
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 180m;
    ssl_session_tickets off;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DHE+AES128:!ADH:!AECDH:!MD5;
    ssl_dhparam /etc/nginx/cert/dhparam.pem;

    # HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";

    # Deters click-jacking
    add_header X-Frame-Options SAMEORIGIN;

    # Deters MIME-type confusion attacks
    add_header X-Content-Type-Options nosniff;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    # This is also commented out until we run certbot for the first time
    # ssl_trusted_certificate /etc/letsencrypt/live/vortechmusic.com/fullchain.pem;
    resolver 8.8.8.8 8.8.4.4;

    # Root location
    root /srv/vortech-backend/html;
    index index.html index.htm;

    access_log /srv/vortech-backend/logs/access.log;
    error_log /srv/vortech-backend/logs/error.log;

    location / {
        include uwsgi_params;
        uwsgi_pass unix:/srv/vortech-backend/uwsgi.sock;
    }

    location ^~ /.well-known {
        allow all;
        auth_basic off;
        alias /srv/vortech-backend/.well-known/;
    }

    # Prevent serving files beginning with a “.”
    # Do not log attempt
    location ~ /\. {
        access_log off;
        log_not_found off;
        deny all;
    }

    # Prevent serving files beginning with a “$”
    # Do not log attempt
    location ~ ~$ {
        access_log off;
        log_not_found off;
        deny all;
    }

    # Prevent logging whenever favicon & robots.txt files are accessed
    location = /robots.txt {
        log_not_found off;
    }

    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }
}

# Redirect all HTTP traffic to HTTPS
# Always redirect to www.<domain_name>, not bare-domain (without "www") according to SEO best-practices
# If you are in Vagrant, comment this out if you use "localhost". Otherwise there's an infinite loop
server {
    listen 80;
    listen [::]:80;

    return 301 https://www.vortechmusic.com$request_uri;
}

# Redirect bare-domain HTTPS to https://www.vortechmusic.com
# If you are in Vagrant, comment this out if you use "localhost". Otherwise there's an infinite loop
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name vortechmusic.com www.vortechmusic.com;
    return 301 https://www.vortechmusic.com$request_uri;
}
